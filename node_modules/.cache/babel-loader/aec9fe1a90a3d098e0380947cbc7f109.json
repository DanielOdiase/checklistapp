{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/checklistapp/src/firebase_config.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from \"react\"; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from '@firebase/firestore';\nimport { getAuth, createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from '@firebase/auth';\nimport { useState, useEffect } from \"react\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCOv0QvX93uHb8GIh7L5U9YL0grYkSwNFU\",\n  authDomain: \"checklistapp-2af94.firebaseapp.com\",\n  projectId: \"checklistapp-2af94\",\n  storageBucket: \"checklistapp-2af94.appspot.com\",\n  messagingSenderId: \"633470529340\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nexport default db;\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function signin(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    signin,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(AuthProvider, \"pVIE1MZkE1bnnl412B65WESiG3c=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/checklistapp/src/firebase_config.js"],"names":["React","useContext","initializeApp","getFirestore","getAuth","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","signOut","useState","useEffect","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","process","env","REACT_APP_FIREBASE_APP_ID","app","auth","db","useAuth","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","signin","logout","unsubscribe","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B,C,CACA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA4B,qBAA5B;AACA,SAAOC,OAAP,EAAeC,8BAAf,EAA8CC,kBAA9C,EAAiEC,0BAAjE,EAA4FC,OAA5F,QAA0G,gBAA1G;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC,C,CAEA;AACA;AAEA;;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,oCAFS;AAGrBC,EAAAA,SAAS,EAAE,oBAHU;AAIrBC,EAAAA,aAAa,EAAE,gCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC;AANE,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGnB,aAAa,CAACS,cAAD,CAAzB;AACA,MAAMW,IAAI,GAAElB,OAAO,CAACiB,GAAD,CAAnB;AACA,MAAME,EAAE,GAAEpB,YAAY,CAACkB,GAAD,CAAtB;AACA,eAAeE,EAAf;AAIA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACvB,SAAOvB,UAAU,CAACwB,WAAD,CAAjB;AACD;;GAFeD,O;;AAMhB,MAAMC,WAAW,gBAACzB,KAAK,CAAC0B,aAAN,EAAlB;AAEA,OAAO,SAASC,YAAT,OAAkC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACvC,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BrB,QAAQ,EAA3C;AACA,QAAM,CAACsB,OAAD,EAASC,UAAT,IAAqBvB,QAAQ,CAAC,IAAD,CAAnC;;AAEC,WAAUwB,MAAV,CAAiBC,KAAjB,EAAuBC,QAAvB,EAAgC;AAC/B,WAAO9B,8BAA8B,CAACiB,IAAD,EAAMY,KAAN,EAAYC,QAAZ,CAArC;AACA;;AACD,WAAUC,MAAV,CAAiBF,KAAjB,EAAuBC,QAAvB,EAAgC;AAC/B,WAAO5B,0BAA0B,CAACe,IAAD,EAAMY,KAAN,EAAYC,QAAZ,CAAjC;AACA;;AACD,WAASE,MAAT,GAAiB;AAChB,WAAO7B,OAAO,CAACc,IAAD,CAAd;AACA;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM4B,WAAW,GAAGhC,kBAAkB,CAACgB,IAAD,EAAMiB,IAAI,IAAI;AAClDT,MAAAA,cAAc,CAACS,IAAD,CAAd;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHqC,CAAtC;AAIA,WAAOM,WAAP;AACD,GANS,EAMP,EANO,CAAT;AASD,QAAME,KAAK,GAAC;AACVX,IAAAA,WADU;AAEVI,IAAAA,MAFU;AAGVG,IAAAA,MAHU;AAIVC,IAAAA;AAJU,GAAZ;AAME,sBACO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACA,CAACT,OAAD,IACDH;AAFC;AAAA;AAAA;AAAA;AAAA,UADP;AAOH;;IApCeD,Y;;KAAAA,Y","sourcesContent":["import React,{useContext} from \"react\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore} from '@firebase/firestore';\nimport{getAuth,createUserWithEmailAndPassword,onAuthStateChanged,signInWithEmailAndPassword,signOut} from '@firebase/auth'\nimport { useState ,useEffect} from \"react\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCOv0QvX93uHb8GIh7L5U9YL0grYkSwNFU\",\n  authDomain: \"checklistapp-2af94.firebaseapp.com\",\n  projectId: \"checklistapp-2af94\",\n  storageBucket: \"checklistapp-2af94.appspot.com\",\n  messagingSenderId: \"633470529340\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth= getAuth(app)\nconst db =getFirestore(app)\nexport default db\n\n\n\nexport function useAuth(){\n  return useContext(AuthContext)\n}\n \n\n\nconst AuthContext=React.createContext()\n\nexport function AuthProvider({children}) {\n  const [currentUser,setCurrentUser]=useState()\n  const [loading,setLoading]=useState(true)\n\n   function  signup(email,password){\n    return createUserWithEmailAndPassword(auth,email,password);\n   }\n   function  signin(email,password){\n    return signInWithEmailAndPassword(auth,email,password);\n   }\n   function logout(){\n    return signOut(auth)\n   }\n\n   useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth,user => {\n      setCurrentUser(user)\n      setLoading(false)\n    }) \n    return unsubscribe\n  }, [])\n  \n\n  const value={\n    currentUser,\n    signup,\n    signin,\n    logout\n  }\n    return (\n           <AuthContext.Provider value={value}>\n          {!loading &&\n          children}\n           </AuthContext.Provider> \n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}